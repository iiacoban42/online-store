version: "3"
services:

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - order-service-3

  order-service-0:
    build:
      context: ./
      dockerfile: ./order/Dockerfile
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
      - SERVICE_ID=0
    command: gunicorn -b 0.0.0.0:5000 app:app
    env_file:
      - env/order_service-0.env
    depends_on:
      - kafka
    ports:
    - "5000:5000"

  order-service-1:
    build:
      context: ./
      dockerfile: ./order/Dockerfile
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
      - SERVICE_ID=1
    command: gunicorn -b 0.0.0.0:5001 app:app
    env_file:
      - env/order_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "5001:5001"

  order-service-2:
    build:
      context: ./
      dockerfile: ./order/Dockerfile
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
      - SERVICE_ID=2
    command: gunicorn -b 0.0.0.0:5002 app:app
    env_file:
      - env/order_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "5002:5002"

  order-service-3:
    build:
      context: ./
      dockerfile: ./order/Dockerfile
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
      - SERVICE_ID=3
    command: gunicorn -b 0.0.0.0:5003 app:app
    env_file:
      - env/order_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "5003:5003"

  order-db-0:
    image: postgres
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "5101:5101"
    command: -p 5101

  order-db-1:
    image: postgres
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "5102:5102"
    command: -p 5102

  order-db-2:
    image: postgres
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "5103:5103"
    command: -p 5103

  stock-service-0:
    build:
      context: ./
      dockerfile: ./stock/Dockerfile
    image: stock:latest
    environment:
      - SERVICE_ID=0
    command: gunicorn -b 0.0.0.0:7000 app:app
    env_file:
      - env/stock_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "7000:7000"

  stock-service-1:
    build:
      context: ./
      dockerfile: ./stock/Dockerfile
    image: stock:latest
    environment:
      - SERVICE_ID=1
    command: gunicorn -b 0.0.0.0:7001 app:app
    env_file:
      - env/stock_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "7001:7001"

  stock-service-2:
    build:
      context: ./
      dockerfile: ./stock/Dockerfile
    image: stock:latest
    environment:
      - SERVICE_ID=3
    command: gunicorn -b 0.0.0.0:7002 app:app
    env_file:
      - env/stock_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "7002:7002"

  stock-service-3:
    build:
      context: ./
      dockerfile: ./stock/Dockerfile
    image: stock:latest
    environment:
      - SERVICE_ID=2
    command: gunicorn -b 0.0.0.0:7003 app:app
    env_file:
      - env/stock_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "7003:7003"

  stock-db-0:
    image: postgres
    command: postgres -p 7101 --max_prepared_transactions=100
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "7101:7101"

  stock-db-1:
    image: postgres
    command: postgres -p 7102 --max_prepared_transactions=100
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "7102:7102"

  stock-db-2:
    image: postgres
    command: postgres -p 7103 --max_prepared_transactions=100
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "7103:7103"

  payment-service-0:
    build:
      context: ./
      dockerfile: ./payment/Dockerfile
    image: user:latest
    environment:
      - SERVICE_ID=0
    command: gunicorn -b 0.0.0.0:6000 app:app
    env_file:
      - env/payment_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "6000:6000"

  payment-service-1:
    build:
      context: ./
      dockerfile: ./payment/Dockerfile
    image: user:latest
    command: gunicorn -b 0.0.0.0:6001 app:app
    environment:
      - SERVICE_ID=1
    env_file:
      - env/payment_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "6001:6001"

  payment-service-2:
    build:
      context: ./
      dockerfile: ./payment/Dockerfile
    image: user:latest
    command: gunicorn -b 0.0.0.0:6002 app:app
    environment:
      - SERVICE_ID=2
    env_file:
      - env/payment_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "6002:6002"

  payment-service-3:
    build:
      context: ./
      dockerfile: ./payment/Dockerfile
    image: user:latest
    command: gunicorn -b 0.0.0.0:6003 app:app
    environment:
      - SERVICE_ID=3
    env_file:
      - env/payment_service-0.env
    depends_on:
      - order-service-0
    ports:
      - "6003:6003"

  payment-db-0:
    image: postgres
    command: postgres -p 6101 --max_prepared_transactions=100
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "6101:6101"

  payment-db-1:
    image: postgres
    command: postgres -p 6102 --max_prepared_transactions=100
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "6102:6102"

  payment-db-2:
    image: postgres
    command: postgres -p 6103 --max_prepared_transactions=100
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0
    ports:
      - "6103:6103"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
