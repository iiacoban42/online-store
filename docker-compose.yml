version: "3"
services:

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"

  order-service-0:
    build:
      context: ./
      dockerfile: ./order/Dockerfile
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
    command: gunicorn -b 0.0.0.0:5000 app:app
    env_file:
      - env/order_service.env
    ports:
    - "5000:5000"

#  order-service-1:
#    build:
#      context: ./
#      dockerfile: ./order/Dockerfile
#    image: order:latest
#    environment:
#      - GATEWAY_URL=http://gateway:80
#    command: gunicorn -b 0.0.0.0:5001 app:app
#    env_file:
#      - env/order_service.env
#    ports:
#      - "5001:5001"

  order-db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0

  stock-service-0:
    build:
      context: ./
      dockerfile: ./stock/Dockerfile
    image: stock:latest
    command: gunicorn -b 0.0.0.0:7000 app:app
    env_file:
      - env/stock_service.env
    ports:
      - "7000:7000"

#  stock-service-1:
#    build:
#      context: ./
#      dockerfile: ./stock/Dockerfile
#    image: stock:latest
#    command: gunicorn -b 0.0.0.0:7001 app:app
#    env_file:
#      - env/stock_service.env
#    ports:
#      - "7001:7001"

  stock-db:
    image: postgres
    command: postgres --max_prepared_transactions=100
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0

  payment-service-0:
    build:
      context: ./
      dockerfile: ./payment/Dockerfile
    image: user:latest
    command: gunicorn -b 0.0.0.0:6000 app:app
    env_file:
      - env/payment_service.env
    ports:
      - "6000:6000"

#  payment-service-1:
#    build:
#      context: ./
#      dockerfile: ./payment/Dockerfile
#    image: user:latest
#    command: gunicorn -b 0.0.0.0:6001 app:app
#    environment:
#      - ID=1
#    env_file:
#      - env/payment_service.env
#    ports:
#      - "6001:6001"

  payment-db:
    image: postgres
    command: postgres --max_prepared_transactions=100
    environment:
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: 0

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
